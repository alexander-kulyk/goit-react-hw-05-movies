{"version":3,"file":"static/js/843.d942e585.chunk.js","mappings":"oNAGaA,EAAOC,EAAAA,GAAAA,GAAH,8GAQJC,EAAOD,EAAAA,GAAAA,GAAH,+DAMJE,GAAgBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,+J,SCC1B,EAboB,SAAC,GAAa,IAAZI,EAAW,EAAXA,OACXC,GAAWC,EAAAA,EAAAA,MAElB,OACI,SAACP,EAAD,UACKK,EAAOG,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OACR,SAACR,EAAD,WACI,SAACC,EAAD,CAAeQ,GAAE,kBAAaF,GAAMG,MAAS,CAACC,KAAMP,GAApD,gBAAgEI,QAAhE,IAAgEA,EAAAA,EAAS,cADlED,EADH,KAMvB,C,qJCdYK,EAAOb,EAAAA,GAAAA,KAAH,4BAGJc,EAAQd,EAAAA,GAAAA,MAAH,8HAOLe,EAAYf,EAAAA,GAAAA,OAAH,oK,SCRTgB,EAAY,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,kBAAmBC,EAAiB,EAAjBA,aAW1C,OACI,UAACL,EAAD,CAAMM,SANW,SAAAC,GACjBA,EAAEC,iBACFH,GACH,EAGG,WACI,SAACJ,EAAD,CACIQ,KAAK,OACLC,SAbW,SAAAH,GACnBH,EAAkBG,EAAEI,OAAOC,MAAMC,OACpC,KAaO,SAACX,EAAD,CAAWO,KAAK,SAAhB,sBAGX,E,qDC2ED,EAtFe,WAAM,IAAD,EAEhB,GAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAW,UAAGT,EAAaU,IAAI,gBAApB,QAAgC,IAOjDC,EAAAA,EAAAA,YAAU,WAEN,GAAoB,KAAhBF,EAAJ,CAIF,IAAMG,EAAS,mCAAG,WAAMH,GAAN,yFAGRD,GAAU,GAHF,UAIWK,EAAAA,EAAAA,IAAeJ,GAJ1B,UAIFK,EAJE,OAKFT,EAAOS,EAAKT,KAAKU,QAEvBT,EAAQD,GAEY,IAAhBA,EAAKW,OATD,sBAUE,IAAIC,MAAM,oBAVZ,0DAaRC,EAAAA,EAAAA,IAAM,KAAMC,QAAS,CACjBC,SAAUF,EAAAA,GAAAA,SAAAA,gBAdN,yBAiBRV,GAAU,GAjBF,6EAAH,sDAqBfI,EAAUH,EAvBP,CAyBJ,GAAE,CAACA,IAsBJ,OACI,UAAC,IAAD,CACIY,QAAU,OACVC,cAAe,SACfC,eAAe,SACfC,WAAW,SAEXC,OAAS,OANb,WAQI,SAACrC,EAAD,CACIC,kBA3Bc,SAAAQ,GACtBO,EAASP,EAEZ,EAyBWP,aAvBS,WACH,KAAVa,IACAe,EAAAA,EAAAA,IAAM,kBAAmB,CACrBE,SAAUF,EAAAA,GAAAA,SAAAA,gBAIlBjB,EAA0B,KAAVE,EAAe,CAACA,MAAAA,GAAS,CAAC,EAG7C,IAeOI,GAAS,SAACmB,EAAA,EAAD,KAAY,SAACC,EAAA,EAAD,CAAYnD,OAAU6B,MAGtD,C","sources":["components/ListMovies/ListMovies.styled.js","components/ListMovies/ListMovies.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\"\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n    margin: 5px;\n   list-style: none\n`;\n\n\nexport const LinkItemMovie = styled(Link)`\n   text-decoration: none;\n   color: rgb(4, 120, 128);\n\n   :hover{\n    background-color:rgb(4, 120, 128);\n    color: white;\n   }\n`;","import PropTypes from 'prop-types';\nimport {  useLocation } from \"react-router-dom\"\nimport { Item, LinkItemMovie, List } from \"./ListMovies.styled\"\n\n\nconst ListMovies  = ({movies}) =>{\n    const  location = useLocation();\n    \n    return(\n        <List>\n            {movies.map(({id, title}) =>(\n                <Item key={id}>\n                    <LinkItemMovie to={`/movies/${id}`} state = {{from: location}}>{title ?? 'no title'}</LinkItemMovie>\n                </Item>))}\n        </List>\n    )\n}\n\nexport default ListMovies;\n\n\nListMovies.propTypes ={\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string,\n          })\n    ),\n}","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  \n`;\nexport const Input = styled.input`\n    width: 200px;\n    height: 25px;\n    border: 1px solid rgb(4,120,128);\n    border-radius: 5px;\n`;\n\nexport const SearchBtn = styled.button`\n    margin: 5px;\n    height: 30px;\n    border:  none;\n    border-radius: 5px;\n    background-color: rgb(4,120,128);\n    color: white;\n`;\n\n\n","import PropTypes from 'prop-types';\nimport { Form, Input, SearchBtn } from \"./SearchBox.styled\";\n\n\nexport const SearchBox = ({handleChangeInput, handleSubmit}) =>{\n\n    const onChangeInput  = e =>{\n        handleChangeInput(e.target.value.trim())\n    };\n\n    const onSubmitForm = e =>{\n        e.preventDefault();\n        handleSubmit()\n    }\n\n    return(\n        <Form onSubmit={onSubmitForm}>\n            <Input \n                type='text'\n                onChange={onChangeInput}\n                />\n            <SearchBtn type=\"Submit\">Submit</SearchBtn>\n        </Form>\n    )\n};\n\nSearchBox.propTypes = {\n    handleChangeInput: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n}","import { toast } from 'react-toastify';\n\nimport { getSearchMovie } from \"API/fetchMovies\";\nimport { SearchBox } from \"components/SearchBox/SearchBox\"\nimport { useState, useEffect} from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport ListMovies from '../../components/ListMovies/ListMovies';\nimport { Loader } from 'components/Loader/Loader';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from 'components/Container/Conteiner.styled';\n\n\nconst Movies = () =>{\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [query, setQuery] = useState('');\n    const [data, setData] = useState([]);\n    const [loader, setLoader] = useState(false);\n\n    const filterParam = searchParams.get('query') ?? '';\n\n    //const ListMovies = lazy(()=> import('../../components/ListMovies/ListMovies'))\n\n\n\n\n    useEffect(() => {\n\n        if (filterParam === '') {\n            return\n        }\n\n      const getMovies = async filterParam  =>{\n\n            try {\n                setLoader(true)\n                const resp = await getSearchMovie(filterParam);\n                const data = resp.data.results;\n\n                setData(data);\n\n                if (data.length === 0) {\n                    throw new Error('Not a valid word');\n                }\n            } catch (error) {\n                toast(error.message, {\n                    position: toast.POSITION.BOTTOM_CENTER\n                })\n            }finally{\n                setLoader(false)\n            }\n        }\n\n      getMovies(filterParam);\n      \n    }, [filterParam])\n    \n\n\n\n    const handleChangeInput = value =>{\n        setQuery(value);\n        \n    };\n\n    const handleSubmit = () =>{\n        if (query === '') {\n            toast('Write something', {\n                position: toast.POSITION.BOTTOM_CENTER\n            });\n            \n        }\n        setSearchParams(query !== '' ? {query} : {});\n\n        \n    }\n\n    return(\n        <Container\n            display = 'flex'\n            flexDirection ='column'\n            justifyContent='center'\n            alignItems='center'\n\n            margin = '50px'\n        >\n            <SearchBox \n                handleChangeInput =  {handleChangeInput}\n                handleSubmit = {handleSubmit}\n            />\n           {loader ? <Loader/> : <ListMovies movies = {data}/>}\n        </Container>\n    )\n};\n\n\n\n\nexport default Movies;\n\n\n"],"names":["List","styled","Item","LinkItemMovie","Link","movies","location","useLocation","map","id","title","to","state","from","Form","Input","SearchBtn","SearchBox","handleChangeInput","handleSubmit","onSubmit","e","preventDefault","type","onChange","target","value","trim","useSearchParams","searchParams","setSearchParams","useState","query","setQuery","data","setData","loader","setLoader","filterParam","get","useEffect","getMovies","getSearchMovie","resp","results","length","Error","toast","message","position","display","flexDirection","justifyContent","alignItems","margin","Loader","ListMovies"],"sourceRoot":""}